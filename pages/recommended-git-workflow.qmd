## Recommended Git Workflow

Our recommended Git/Github developer workflow for versioning and tagging is as follows:

1. Create a development branch and switch to it, e.g.  
`git checkout -b feature/dev`
2. Add your developments, commit and push these changes  
`git add -A`  
`git commit -m "my changes"`  
`git push origin feature/dev`, 
3. Submit a pull request on Github and get your changes reviewed
4. Once changes are approved, the maintainer decides on the major/minor/patch version increment (e.g. `1.3.0`)
5. The developer updates to the agreed version in `DESCRIPTION`, e.g.  
`usethis::use_version(1.3.0)`  
`git add -A`  
`git commit -m "incrementing to v1.3.0"`  
`git push origin feature/dev`
6. The pull request is merged to the main branch
7. The commit (let's say the SHA is `1234567`) is tagged with `v1.3.0`  
`git tag 1234567 v1.3.0`  
`git push origin v1.3.0`

Graphically, this looks as follows:

```{mermaid}

flowchart TB
    mb(["Main Branch"])
    cdb["Development Branch"]
    ca["Changes added\nChanges committed\nChanges pushed"]
    cr{Code Review}
    vi[Version incremented]
    ta[Tag latest commit]
    mbu([Main Branch updated])

    mb --"git checkout -b feature/dev" --> cdb
    cdb --"git add -A\ngit commit -m 'my changes'\ngit push origin feature/dev" --> ca
    ca --"Github: Make Pull Request"--> cr
    cr --"Accept changes\nusethis::use_version(1.3.0)\ngit add -A\ngit commit -m 'incrementing to v1.3.0'\ngit push origin feature/dev"--> vi
    vi -- "Pull request merged to main" --> mbu
    cr --"Reject changes"--> cdb
    ta <-."git tag 1234567 v1.3.0\ngit push origin v1.3.0".-> mbu

    linkStyle default stroke:lightgray 
```
