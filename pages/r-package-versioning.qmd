
## R Package Versioning 

For PHS packages, we recommend following the tidyverse approach to versioning:

-	Use the `.` separator rather than `-`.
-	Version number should always include the major, minor and patch number, e.g. 1.4.0. 
-	Increment the major, the minor or patch number reflecting the changes made in the release. Taking the 1.4.0 example above, a patch release would increment to 1.4.1, a minor release to 1.5.0, a major release to 2.0.0

Some examples of what types of changes would be considered in each of the types of releases:

Patch release: No breaking changes and no significant new features. For example, backward compatible bug fixes.

Minor release: New features / functionality or improvements introduced; all changes are backward compatible. 

Major release: Breaking changes (changes that aren`t backward compatible), changes likely to impact on many users. Significant new features you want to highlight.

Questions to ask when deciding how to increment the version number for a new release:
1.	Are there any breaking changes?
&rarr	If the answer is yes, this should be a major release.
2.	Are there any changes to functionality (that are user-facing)? 
&rarr	If the answer is yes, the release should be minor or major. 

